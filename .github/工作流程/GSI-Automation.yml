# This is a basic workflow to help you get started with Actions

name: CI
name: GSI-Automation

on:
  watch:
    types: [started]
    
env:
  ROM_URL: https://coloroswebsitefs.coloros.com/coloroswebsite-coloros-com/grs_20210514101850/PCHM10_11_OTA_1770_all_mEn3qE24Oezm.ozip
  ROM_NAME: color
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
       - name: Checkout
         uses: actions/checkout@master
       
       - name: Clean Up
         run: |
           docker rmi `docker images -q`
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
           sudo -E apt-get update
           sudo -E apt-get -y autoremove --purge
           sudo -E apt-get clean 
           
       - name: Initialization environment
         run: |
            sudo -E apt-get -qq update
            sudo -E apt-get -qq install git openjdk-8-jdk wget
       
       - name: Clone ErfanGSI Source Code
         run: git clone --recurse-submodules https://github.com/Velosh/ErfanGSIs-VelanGSIs.git
       
       - name: Setting up ErfanGSI requirements
         run: |
              sudo mv ErfanGSIs-VelanGSIs ErfanGSIs
              sudo chmod -R 777 ErfanGSIs
              cd ErfanGSIs
              sudo bash setup.sh
              sudo sed -i '7c AB=true' url2GSI.sh
              sudo sed -i '8c Aonly=false' url2GSI.sh
       
       - name: Download Stock Rom & Generate GSI
         run: sudo ./ErfanGSIs/url2GSI.sh $ROM_URL $ROM_NAME
       
       - name: Zip GSI  
         run: |
              mkdir final
              zip -r final/GSI.zip /home/runner/work/GSI-Automation/GSI-Automation/ErfanGSIs/output/
       
       - name: Upload GSI to CowTransfer
         run: |
              curl -sL https://git.io/cowtransfer | sh 
              ./cowtransfer-uploader final/GSI.zip
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
